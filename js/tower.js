// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['entity'], function(Entity) {
    var Tower;
    return Tower = (function(_super) {

      __extends(Tower, _super);

      function Tower(id, kind) {
        var data;
        this.upgradeLevel = 0;
        data = Data.store.towers[kind] || (function() {
          throw "Tower '" + kind + "' inexistante";
        })();
        this.health = data.health, this.width = data.width, this.height = data.height, this.resistance = data.resistance, this.villagers = data.villagers, this.door = data.door;
        Tower.__super__.constructor.call(this, id, kind);
        this.setUpgradeLevel(0);
      }

      Tower.prototype.setUpgradeLevel = function(level) {
        this.upgradeLevel = level;
        return this.setAnimation('upgrade_' + level);
      };

      Tower.prototype.onRemove = function(callback) {
        return this.removeCallback = callback;
      };

      Tower.prototype.remove = function() {
        console.log("remove tower");
        this.removeCallback();
        return Entity.prototype.remove.call(this);
      };

      return Tower;

    })(Entity);
  });

}).call(this);
